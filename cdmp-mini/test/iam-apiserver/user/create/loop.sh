#!/bin/bash
set -euo pipefail  # 严格模式：遇到错误/未定义变量/管道失败时退出，避免隐藏问题

##############################################################################
# 配置区：根据你的项目修改以下变量（必填）
##############################################################################
# 1. 测试包路径（替换为你的实际测试包，如用户之前的测试包路径）
TEST_PACKAGE="github.com/maxiaolu1981/cretem/cdmp-mini/test/iam-apiserver/user/create"
# 2. go test 额外参数（可选，如 -v 显示详细日志、-timeout 30s 超时时间）
TEST_FLAGS="-v -timeout 60s"

##############################################################################
# 1. 参数验证：检查是否传入循环次数，且次数为正整数
##############################################################################
# 若未传入参数，提示用法并退出
if [ $# -ne 1 ]; then
    echo "Usage: $0 <循环次数>"
    echo "Example: $0 10  # 循环执行10次go test"
    exit 1
fi

# 提取循环次数参数，验证是否为正整数
LOOP_COUNT="$1"
if ! [[ "$LOOP_COUNT" =~ ^[1-9][0-9]*$ ]]; then
    echo "错误：循环次数必须是正整数（如 5、10、20），当前输入：$LOOP_COUNT"
    exit 1
fi

##############################################################################
# 2. 初始化统计变量
##############################################################################
total=0       # 总执行次数
success=0     # 成功次数
fail=0        # 失败次数
start_time=$(date +"%Y-%m-%d %H:%M:%S")  # 脚本开始时间

##############################################################################
# 3. 循环执行go test
##############################################################################
echo "==================================== 开始执行 ===================================="
echo "测试包路径：$TEST_PACKAGE"
echo "循环次数：$LOOP_COUNT 次"
echo "开始时间：$start_time"
echo "=================================================================================="

for ((i=1; i<=LOOP_COUNT; i++)); do
    # 记录当前执行时间
    current_time=$(date +"%Y-%m-%d %H:%M:%S")
    total=$((total + 1))
    
    echo -e "\n【第 $i 次执行】($current_time)"
    echo "----------------------------------------------------------------------------------"
    
    # 执行go test，捕获退出状态码（0=成功，非0=失败）
    if go test $TEST_FLAGS $TEST_PACKAGE; then
        # 执行成功：更新统计，输出绿色提示
        success=$((success + 1))
        echo -e "\033[32;1m✅ 第 $i 次执行成功\033[0m"  # 绿色加粗
    else
        # 执行失败：更新统计，输出红色提示
        fail=$((fail + 1))
        echo -e "\033[31;1m❌ 第 $i 次执行失败\033[0m"  # 红色加粗
    fi
done

##############################################################################
# 4. 输出执行结果统计
##############################################################################
end_time=$(date +"%Y-%m-%d %H:%M:%S")
# 计算失败率（保留2位小数）
fail_rate=$(echo "scale=2; $fail / $total * 100" | bc)

echo -e "\n==================================== 执行统计 ===================================="
echo "总执行次数：$total 次"
echo "成功次数：  $success 次"
echo "失败次数：  $fail 次"
echo "失败率：    $fail_rate%"
echo "开始时间：  $start_time"
echo "结束时间：  $end_time"
echo "=================================================================================="

# 若存在失败，脚本最终退出码为1（便于CI/CD流程识别失败）
if [ $fail -gt 0 ]; then
    exit 1
else
    exit 0
fi