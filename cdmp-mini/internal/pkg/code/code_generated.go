// Copyright 2020 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file.

// Code generated by "codegen -type=int /home/colin/workspace/golang/src/github.com/marmotedu/iam/internal/pkg/code"; DO NOT EDIT.

package code

// init register error codes defines in this source code to `github.com/marmotedu/errors`
// 错误码注册：绑定错误码、HTTP状态码、汉化消息
// init 函数：按 HTTP 通用规则注册所有错误码
func init() {
	// 1. 通用基本错误（1000xx）
	register(ErrSuccess, 200, "成功")                                                // 200 OK：请求成功
	register(ErrUnknown, 500, "内部服务器错误")                                           // 500：服务端未知错误
	register(ErrBind, 400, "请求体绑定结构体失败")                                           // 400 Bad Request：请求格式错误
	register(ErrValidation, 422, "请求数据语义校验失败")                                     // 422 Unprocessable Entity：格式正确但语义错误（如字段值超出范围）
	register(ErrPageNotFound, 404, "页面不存在")                                        // 404 Not Found：资源不存在
	register(ErrMethodNotAllowed, 405, "方法不允许")                                    // 405 Not Found：方法不允许
	register(ErrUnsupportedMediaType, 415, "不支持的Content-Type，仅支持application/json") // 415 Not Found：格式不支持
	register(ErrContextCanceled, 408, "请求超时导致的上下文取消")                              // 415 Not Found：格式不支持

	// 2. 通用数据库错误（1001xx）
	register(ErrDatabase, 500, "数据库操作错误")        // 500：服务端数据库层错误
	register(ErrDatabaseTimeout, 504, "数据库操作超时") // 504 Gateway Timeout：数据库响应超时（HTTP 通用规则）

	// 3. 通用授权认证错误（1002xx）
	register(ErrEncrypt, 500, "用户密码加密失败")                 // 500：服务端加密逻辑错误
	register(ErrSignatureInvalid, 400, "签名无效")            // 401 Unauthorized：未授权（签名验证失败）
	register(ErrExpired, 401, "令牌已过期")                    // 401：令牌过期导致未授权
	register(ErrInvalidAuthHeader, 400, "授权头格式无效")        // 400：授权头格式错误（如缺少 Bearer 前缀）
	register(ErrMissingHeader, 401, "缺少 Authorization 头") // 401：请求缺少必要的头信息
	register(ErrPasswordIncorrect, 401, "密码不正确")          // 401：密码错误导致未授权
	register(ErrPermissionDenied, 403, "权限不足，无操作权限")      // 403 Forbidden：已授权但无权限
	register(ErrTokenInvalid, 400, "令牌无效（格式/签名错误）")       // 401：令牌本身无效
	register(
		ErrBase64DecodeFail,
		400,
		"Basic认证 payload Base64解码失败（请确保格式为 username:password 的Base64编码）",
	)
	register(
		ErrInvalidBasicPayload,
		400,
		"Basic认证 payload格式无效（需用冒号分隔用户名和密码，如 username:password）",
	)

	// 4. 通用加解码错误（1003xx）
	register(ErrEncodingFailed, 500, "数据编码失败")          // 500：服务端编码逻辑错误
	register(ErrDecodingFailed, 400, "数据解码失败（格式错误）")    // 400：客户端传入的数据格式无法解码（如 JSON 格式错误）
	register(ErrInvalidJSON, 400, "数据不是有效的 JSON 格式")    // 400：JSON 格式错误
	register(ErrEncodingJSON, 500, "JSON 数据编码失败")       // 500：服务端 JSON 编码错误
	register(ErrDecodingJSON, 400, "JSON 数据解码失败（格式错误）") // 400：客户端 JSON 格式错误
	register(ErrInvalidYaml, 400, "数据不是有效的 YAML 格式")    // 400：YAML 格式错误
	register(ErrEncodingYaml, 500, "YAML 数据编码失败")       // 500：服务端 YAML 编码错误
	register(ErrDecodingYaml, 400, "YAML 数据解码失败（格式错误）") // 400：客户端 YAML 格式错误

	// 5. iam-apiserver 用户模块（1100xx）
	register(ErrUserNotFound, 404, "用户不存在")              // 404：用户资源不存在
	register(ErrUserAlreadyExist, 409, "用户已存在（用户名冲突）")   // 409 Conflict：资源冲突（用户名已被占用）
	register(ErrUnauthorized, 401, "未授权访问用户资源")          // 401：未登录/令牌无效，无法访问用户资源
	register(ErrInvalidParameter, 400, "用户参数无效（如用户名为空）") // 400：参数格式错误
	register(ErrInternal, 500, "用户模块内部逻辑错误")             // 500：服务端用户模块错误
	register(ErrResourceConflict, 409, "用户资源冲突（如角色已绑定）") // 409：用户相关资源冲突
	register(ErrInternalServer, 500, "用户模块服务器内部错误")      // 500：服务端底层错误

	// 6. iam-apiserver 密钥模块（1101xx）
	register(ErrReachMaxCount, 400, "密钥数量达到上限（最多支持 10 个）") // 400：客户端请求超出限制
	register(ErrSecretNotFound, 404, "密钥不存在")              // 404：密钥资源不存在

	// 7. iam-apiserver 策略模块（1102xx）
	register(ErrPolicyNotFound, 404, "策略不存在") // 404：策略资源不存在

	// 列出所有错误码（验证注册结果）

}
